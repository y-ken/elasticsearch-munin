#!/usr/bin/env perl

# Parameters supported:       
#                             
# config                      
# autoconf                    
#                             
# Magic markers:              
#%# family=auto               
#%# capabilities=autoconf     
                              
use strict;                   
use warnings;                 
use LWP;                      
use JSON qw/decode_json/;     
                              
=head1 NAME

elasticsearch_cluster_shards - A munin plugin that collects shard stats of your elasticsearch instances

=head1 APPLICABLE SYSTEMS

elasticsearch

=head1 CONFIGURATION

None

=head1 BUGS

None known so far. If you find any, let me know.

=head1 AUTHOR

Tomas Doran (t0m) - c<< <bobtfish@bobtfish.net> >>
Kentaro Yoshida - https://github.com/y-ken

=cut

my %out = (relocating_shards => 0, active_shards => 0, unassigned_shards => 0, initializing_shards => 0, active_primary_shards => 0);
if ($ARGV[0] and $ARGV[0] eq 'config') {
    print "graph_title elasticsearch cluster shards\n";
    print "graph_category elasticsearch\n";
    print "graph_scale no\n";

    foreach my $name (keys %out) {
        print "$name.label $name\n"."$name.type GAUGE\n";
    }
    exit(0);
}

my $host = exists $ENV{'host'} ? $ENV{'host'} : 'localhost';
my $port = exists $ENV{'port'} ? $ENV{'port'} : 9200;

my $ua = LWP::UserAgent->new;
$ua->timeout(10);

sub get_json_from_url {
    my $uri = shift;
    my $res = $ua->get($uri, 'Content-Type' => 'application/json' );
    my $data = {};
    if ($res->is_success) {
        $data = do { local $@; eval { decode_json($res->content) } };
    } elsif ($ENV{'MUNIN_DEBUG'}) {
        print STDERR "Error: ".$res->code." for $uri\n";
    }
    return $data;
}

my $data = get_json_from_url("http://$host:$port/_cluster/health");
if ( ! $data->{cluster_name}) {
    foreach my $name (keys %out) {
        print "$name.value U\n";
    }
    exit(0);
}

foreach my $name (keys %out) {
    print "$name.value " . $data->{$name} . "\n";
}
