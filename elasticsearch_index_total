#!/usr/bin/env perl

# Parameters supported:
#
# config
# autoconf
#
# Magic markers:
#%# family=auto
#%# capabilities=autoconf

use strict;
use warnings;
use LWP;
use JSON qw/decode_json/;

=head1 NAME

elasticsearch_index_total - A munin plugin that collects stats about the index totals

=head1 APPLICABLE SYSTEMS

elasticsearch

=head1 CONFIGURATION

None

=head1 BUGS

None known so far. If you find any, let me know.

=head1 AUTHOR

Kentaro Yoshida - https://github.com/y-ken

=cut

my %out = (index => 0, get => 0, search => 0, delete => 0);
if ($ARGV[0] and $ARGV[0] eq 'config') {
    print "graph_title elasticsearch index operations\n";
    print "graph_category elasticsearch\n";
    print "graph_args --base 1000 -l 0\n";
    print "graph_vlabel Operations per second\n";
            
    print "graph_order index get search delete\n";
    foreach my $name (keys %out) {
        print "$name.label $name\n";
        print "$name.type DERIVE\n";
        print "$name.min 0\n";
        print "$name.draw LINE2\n";
    }
    exit(0);
}

my $host = exists $ENV{'host'} ? $ENV{'host'} : 'localhost';
my $port = exists $ENV{'port'} ? $ENV{'port'} : 9200;

my $ua = LWP::UserAgent->new;
$ua->timeout(10);

sub get_json_from_url {
    my $uri = shift;
    my $res = $ua->get($uri, 'Content-Type' => 'application/json' );
    my $data = {};
    if ($res->is_success) {
        $data = do { local $@; eval { decode_json($res->content) } };
    } elsif ($ENV{'MUNIN_DEBUG'}) {
        print STDERR "Error: ".$res->code." for $uri\n";
    }
    return $data;
}

my $data = get_json_from_url("http://$host:9200/_nodes");
my $t_data = get_json_from_url("http://$host:9200/_nodes/stats");
if ( ! $data->{nodes} || ! $t_data->{nodes}) {
    foreach my $name (keys %out) {
        print "$name.value U\n";
    }
    exit(0);
}

foreach my $full_node_name (keys %{$data->{nodes}}) {
    next unless $t_data->{nodes}{$full_node_name};
    $out{index} = $t_data->{nodes}{$full_node_name}{indices}{indexing}{index_total};
    $out{get} = $t_data->{nodes}{$full_node_name}{indices}{get}{total};
    $out{search} = $t_data->{nodes}{$full_node_name}{indices}{search}{query_total};
    $out{delete} = $t_data->{nodes}{$full_node_name}{indices}{indexing}{delete_total};
}

foreach my $name (keys %out) {
    print "$name.value " . $out{$name} . "\n";
}
